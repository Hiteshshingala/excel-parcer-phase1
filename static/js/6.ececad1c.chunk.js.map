{"version":3,"sources":["views/dashboard/viewdata.js","views/home/index.js"],"names":["ViewData","useState","allData","setallData","dropdownOpen","setDropdownOpen","selectedDate","setselectedDate","allGraphData","setAllGraphData","isDataUpdaloaded","setisDataUpdaloaded","barGraphOneData","setbarGraphOneData","selectData","e","_date","target","innerText","useEffect","label","value","length","map","data","push","state","total","barData","processPieChartData","filter","d","createdAt","console","log","a","axios","get","fetchData","goToHome","isOpen","toggle","prevState","caret","onClick","Home","props","setFilter","filterTwo","setFilterTwo","filterThree","setFilterThree","filterFour","setFilterFour","barGraphTwoData","setbarGraphTwoData","barGraphThreeData","setbarGraphThreeData","barGraphFourData","setbarGraphFourData","salesPieChartData","setsalesPieChartData","puchasePieChartData","setpuchasePieChartData","profitePieChartData","setprofitePieChartData","filterTypes","dropdownTwoOpen","setDropdownTwoOpen","dropdownThreeOpen","setDropdownThreeOpen","dropdownFourOpen","setDropdownFourOpen","changeValue","currentTarget","textContent","changeValueTwo","changeValueThree","changeValueFour","pieData","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","salesData","_salesData","Object","keys","values","puchase","_puchase","Total","_profiteChartData","excelData","index","element","indexOf","right","options","maintainAspectRatio","height"],"mappings":"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","file":"static/js/6.ececad1c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\nimport { processPieChartData } from '../../constant/hepler';\r\nimport  Home from '../home'\r\n \r\n\r\nconst ViewData = () => {\r\n  const [allData, setallData] = useState([]);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [selectedDate, setselectedDate] = useState('')\r\n  const [allGraphData, setAllGraphData] = useState([])\r\n  const [isDataUpdaloaded, setisDataUpdaloaded] = useState(false);\r\n  const [barGraphOneData, setbarGraphOneData] = useState([]);\r\n  const toggle = (e) => {\r\n      setDropdownOpen(prevState => !prevState);\r\n    }\r\n\r\n    const selectData = (e) => {\r\n        const _date  = e.target.innerText\r\n        setselectedDate(_date);\r\n    }\r\n    useEffect(() => {\r\n        let label = [],\r\n        value = [];\r\n        if(allGraphData && allGraphData.length > 0) {\r\n            allGraphData.map(data => {\r\n                label.push(data.state)\r\n                value.push(data.total)\r\n            })\r\n        let barData =  processPieChartData(label,value, 'Sales Report')\r\n        setbarGraphOneData(barData);\r\n        }\r\n       }, [allGraphData])\r\n\r\n    useEffect(() => {\r\n     if(selectedDate) {\r\n        // console.log('@@@allData', allData)\r\n        const data = allData.filter(d => d.createdAt === selectedDate)\r\n        console.log('@@@data', data[0].data)\r\n        setisDataUpdaloaded(true);\r\n        setAllGraphData(data[0].data)\r\n\r\n    }\r\n    }, [selectedDate])\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await axios.get(\"http://localhost:3001/all-data\");\r\n      setallData(data.data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const goToHome = () => {\r\n    setisDataUpdaloaded(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {!isDataUpdaloaded ? (\r\n      <div>\r\n        this is old data page\r\n        <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n          <DropdownToggle caret>Select Data</DropdownToggle>\r\n          <DropdownMenu>\r\n              {allData && allData && allData.map(data=> {\r\n                  return (\r\n                  <DropdownItem onClick={selectData}>{data.createdAt}</DropdownItem>\r\n                  )\r\n              })}\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n        {selectedDate && (\r\n            <>\r\n            selected date is {selectedDate}\r\n            </>\r\n        )}\r\n      </div>\r\n    ): (\r\n        <Home  barGraphOneData={barGraphOneData} goToHome={goToHome}/>\r\n    )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewData;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport {\r\n  CardBody,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [state, setstate] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"state\");\r\n  const [filterTwo, setFilterTwo] = useState(\"voucherType\");\r\n  const [filterThree, setFilterThree] = useState(\"name\");\r\n  const [filterFour, setFilterFour] = useState(\"salesman\");\r\n\r\n  const [barGraphOneData, setbarGraphOneData] = useState([]);\r\n  const [barGraphTwoData, setbarGraphTwoData] = useState([]);\r\n  const [barGraphThreeData, setbarGraphThreeData] = useState([]);\r\n  const [barGraphFourData, setbarGraphFourData] = useState([]);\r\n  const [salesPieChartData, setsalesPieChartData] = useState([]);\r\n  const [puchasePieChartData, setpuchasePieChartData] = useState([]);\r\n  const [profitePieChartData, setprofitePieChartData] = useState([]);\r\n\r\n  const [filterTypes, setFilterTypes] = useState([\r\n    \"name\",\r\n    \"voucherType\",\r\n    \"state\",\r\n    \"salesman\",\r\n  ]);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownTwoOpen, setDropdownTwoOpen] = useState(false);\r\n  const [dropdownThreeOpen, setDropdownThreeOpen] = useState(false);\r\n  const [dropdownFourOpen, setDropdownFourOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const toggleTwo = () => setDropdownTwoOpen((prevState) => !prevState);\r\n  const toggleThree = () => setDropdownThreeOpen((prevState) => !prevState);\r\n  const toggleFour = () => setDropdownFourOpen((prevState) => !prevState);\r\n\r\n  const changeValue = (e) => {\r\n    setFilter(e.currentTarget.textContent);\r\n  };\r\n\r\n  const changeValueTwo = (e) => {\r\n    setFilterTwo(e.currentTarget.textContent);\r\n  };\r\n\r\n  const changeValueThree = (e) => {\r\n    setFilterThree(e.currentTarget.textContent);\r\n  };\r\n  const changeValueFour = (e) => {\r\n    setFilterFour(e.currentTarget.textContent);\r\n  };\r\n\r\n  const processPieChartData = (label, data, header = \"graph\") => {\r\n    let pieData = {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: \"Net Profit analysis\",\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n            \"rgba(54, 162, 235, 0.6)\",\r\n            \"rgba(255, 206, 86, 0.6)\",\r\n            \"rgba(75, 192, 192, 0.6)\",\r\n            \"rgba(153, 102, 255, 0.6)\",\r\n            \"rgba(255, 159, 64, 0.6)\",\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n            \"rgba(54, 162, 235, 0.6)\",\r\n            \"rgba(255, 206, 86, 0.6)\",\r\n            \"rgba(75, 192, 192, 0.6)\",\r\n            \"rgba(153, 102, 255, 0.6)\",\r\n            \"rgba(255, 159, 64, 0.6)\",\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n          ],\r\n          borderWidth: 2,\r\n          data: data,\r\n        },\r\n      ],\r\n    };\r\n    return pieData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.salesData) {\r\n      const _salesData = processPieChartData(\r\n        Object.keys(props.salesData),\r\n        Object.values(props.salesData),\r\n        \"Sales Data\"\r\n      );\r\n      setsalesPieChartData(_salesData);\r\n    }\r\n    if (props.puchase) {\r\n      const _puchase = processPieChartData(\r\n        Object.keys(props.puchase),\r\n        Object.values(props.puchase),\r\n        \"Puchase Data\"\r\n      );\r\n      setpuchasePieChartData(_puchase);\r\n    }\r\n    const label = ['sales', 'purchase'];\r\n    const data = [props.salesData.Total, props.puchase.Total];\r\n    const _profiteChartData = processPieChartData(label, data);\r\n    setprofitePieChartData(_profiteChartData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filter] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filter] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filter);\r\n      setbarGraphOneData(barData);\r\n    }\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterTwo] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterTwo] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      debugger;\r\n      let barData = processPieChartData(label, data, filterTwo);\r\n      setbarGraphTwoData(barData);\r\n    }\r\n  }, [filterTwo]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterThree] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterThree] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filterThree);\r\n      setbarGraphThreeData(barData);\r\n    }\r\n  }, [filterThree]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterFour] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterFour] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filterFour);\r\n      setbarGraphFourData(barData);\r\n    }\r\n  }, [filterFour]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n              <DropdownToggle caret>\r\n                {filter || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValue}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphOneData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownTwoOpen} toggle={toggleTwo}>\r\n              <DropdownToggle caret>\r\n                {filterTwo || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueTwo}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphTwoData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownThreeOpen} toggle={toggleThree}>\r\n              <DropdownToggle caret>\r\n                {filterThree || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueThree}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphThreeData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownFourOpen} toggle={toggleFour}>\r\n              <DropdownToggle caret>\r\n                {filterFour || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueFour}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphFourData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <br/>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={salesPieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={puchasePieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={profitePieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}
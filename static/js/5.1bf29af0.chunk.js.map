{"version":3,"sources":["views/dashboard/index.js","views/home/index.js"],"names":["Dashboard","useState","barGraphOneData","setbarGraphOneData","barGraphTwoData","setbarGraphTwoData","isDataUpdaloaded","setisDataUpdaloaded","excelData","setexcelData","salesData","setSalesData","puchase","setpuchase","processPieChartData","label","data","pieData","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","useEffect","console","table","sendData","a","length","axios","post","onChangeHandler","event","readXlsxFile","target","files","then","rows","label2","data2","allBodyData","_salesData","_puchase","index","body","element","date","name","voucherType","state","total","salesman","push","log","barData","barData2","sheet","error","$","bind","addClass","removeClass","Fragment","goToHome","className","type","onClick","e","trigger","onChange","src","alt","replaceWith","clone","hide","show","Home","props","filter","setFilter","filterTwo","setFilterTwo","filterThree","setFilterThree","filterFour","setFilterFour","barGraphThreeData","setbarGraphThreeData","barGraphFourData","setbarGraphFourData","salesPieChartData","setsalesPieChartData","puchasePieChartData","setpuchasePieChartData","profitePieChartData","setprofitePieChartData","filterTypes","dropdownOpen","setDropdownOpen","dropdownTwoOpen","setDropdownTwoOpen","dropdownThreeOpen","setDropdownThreeOpen","dropdownFourOpen","setDropdownFourOpen","changeValue","currentTarget","textContent","changeValueTwo","changeValueThree","changeValueFour","Object","keys","values","Total","_profiteChartData","indexOf","isOpen","toggle","prevState","caret","right","map","options","maintainAspectRatio","height"],"mappings":"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","file":"static/js/5.1bf29af0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport $ from \"jquery\";\r\nimport Home from \"../home/index\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const [barGraphOneData, setbarGraphOneData] = useState([]);\r\n  const [barGraphTwoData, setbarGraphTwoData] = useState([]);\r\n  const [isDataUpdaloaded, setisDataUpdaloaded] = useState(false);\r\n  const [excelData, setexcelData] = useState([]);\r\n  const [salesData, setSalesData] = useState({});\r\n  const [puchase, setpuchase] = useState({});\r\n  \r\n\r\n  const processPieChartData = (label, data, header= 'graph') => {\r\n    let pieData = {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: \"Net Profit analysis\",\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)'\r\n          ],\r\n          hoverBackgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)'\r\n          ],\r\n          borderWidth: 2,\r\n          data: data,\r\n        },\r\n      ],\r\n    };\r\n    return pieData;\r\n  }\r\n  const processBarChartData = (label, data, header= 'graph') => {\r\n    let barData = {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: header,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)'\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)'\r\n          ],\r\n          borderWidth: 2,\r\n          data: data,\r\n        },\r\n      ],\r\n    };\r\n    return barData;\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.table(excelData)\r\n    sendData();\r\n  }, [excelData])\r\n\r\n  const sendData = async () => {\r\n    if(excelData && excelData.length > 0) {\r\n      const saveData = await axios.post('http://localhost:3001/save-excel', excelData)\r\n      // console.log('@@@@saveData', saveData)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const onChangeHandler = async (event) => {\r\n    try {\r\n      readXlsxFile(event.target.files[0]).then((rows) => {\r\n        if (rows && rows.length > 0) {\r\n          let label = [],\r\n          label2 = [],\r\n          data = [],\r\n          data2 = [];\r\n          let allBodyData = [];\r\n          let isData = true;\r\n          const _salesData = {};\r\n          const _puchase = {};\r\n          for (let index = 0; index < rows.length; index++) {\r\n            let body = {};\r\n            const element = rows[index];\r\n            if(index > 3 ){\r\n              body.date = element[0];\r\n              body.name = element[1];\r\n              body.voucherType = element[2];\r\n              body.state = element[3];\r\n              body.total = element[4];\r\n              body.salesman = element[5];\r\n              allBodyData.push(body)\r\n\r\n              label.push(element[3]);\r\n              label2.push(element[3]);\r\n              data.push(element[4]);\r\n              data2.push(element[4]);\r\n\r\n            }\r\n\r\n            if(index > 2 && index < 6){\r\n              _salesData[rows[index][6]] = rows[index][7] \r\n            }\r\n            if(index > 6 && index < 10){\r\n              _puchase[rows[index][6]] = rows[index][7] \r\n            }\r\n          }\r\n          setSalesData(_salesData);\r\n          setpuchase(_puchase);\r\n          // debugger\r\n          console.log('@@@_puchase', _puchase);\r\n          setexcelData(allBodyData);\r\n          let barData =  processPieChartData(label,data, rows[1][0])\r\n          let barData2 =  processPieChartData(label2,data, rows[1][0])\r\n          setisDataUpdaloaded(true);\r\n          setbarGraphOneData(barData);\r\n          setbarGraphTwoData(barData2);\r\n        }\r\n      });\r\n\r\n      readXlsxFile(event.target.files[0], { sheet: 'Sheet1'}).then((rows) => {\r\n        return rows;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"@@@@error\", error);\r\n    }\r\n  };\r\n\r\n  const goToHome = () => {\r\n    setisDataUpdaloaded(false);\r\n  }\r\n\r\n\r\n\r\n  // const readURL = async (input) => {\r\n  //   if (input.files && input.files[0]) {\r\n  //     var reader = new FileReader();\r\n\r\n  //     reader.onload = function (e) {\r\n  //       $(\".image-upload-wrap\").hide();\r\n\r\n  //       $(\".file-upload-image\").attr(\"src\", e.target.result);\r\n  //       $(\".file-upload-content\").show();\r\n\r\n  //       $(\".image-title\").html(input.files[0].name);\r\n  //     };\r\n\r\n  //     reader.readAsDataURL(input.files[0]);\r\n  //   } else {\r\n  //     removeUpload();\r\n  //   }\r\n  // };\r\n\r\n  const removeUpload = () => {\r\n    $(\".file-upload-input\").replaceWith($(\".file-upload-input\").clone());\r\n    $(\".file-upload-content\").hide();\r\n    $(\".image-upload-wrap\").show();\r\n  };\r\n  $(\".image-upload-wrap\").bind(\"dragover\", function () {\r\n    $(\".image-upload-wrap\").addClass(\"image-dropping\");\r\n  });\r\n  $(\".image-upload-wrap\").bind(\"dragleave\", function () {\r\n    $(\".image-upload-wrap\").removeClass(\"image-dropping\");\r\n  });\r\n  return (\r\n    <React.Fragment>\r\n      {!isDataUpdaloaded ? (\r\n        <div className=\"file-upload\">\r\n          <button\r\n            className=\"file-upload-btn\"\r\n            type=\"button\"\r\n            onClick={(e) => {\r\n              $(\".file-upload-input\").trigger(\"click\");\r\n            }}\r\n          >\r\n            Add Image\r\n          </button>\r\n\r\n          <div className=\"image-upload-wrap\">\r\n            <input\r\n              className=\"file-upload-input\"\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                onChangeHandler(e);\r\n              }}\r\n            />\r\n            <div className=\"drag-text\">\r\n              <h3>Drag and drop a file or select add Image</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"file-upload-content\">\r\n            <img className=\"file-upload-image\" src=\"#\" alt=\"your image\" />\r\n            <div className=\"image-title-wrap\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={removeUpload()}\r\n                className=\"remove-image\"\r\n              >\r\n                Remove <span className=\"image-title\">Uploaded Image</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Home  barGraphOneData={barGraphOneData} \r\n        barGraphTwoData={barGraphTwoData}\r\n        excelData={excelData}\r\n        salesData={salesData}\r\n        puchase={puchase}\r\n          goToHome={goToHome}/>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport {\r\n  CardBody,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  DropdownButton,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst Home = (props) => {\r\n  const [state, setstate] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"state\");\r\n  const [filterTwo, setFilterTwo] = useState(\"voucherType\");\r\n  const [filterThree, setFilterThree] = useState(\"name\");\r\n  const [filterFour, setFilterFour] = useState(\"salesman\");\r\n\r\n  const [barGraphOneData, setbarGraphOneData] = useState([]);\r\n  const [barGraphTwoData, setbarGraphTwoData] = useState([]);\r\n  const [barGraphThreeData, setbarGraphThreeData] = useState([]);\r\n  const [barGraphFourData, setbarGraphFourData] = useState([]);\r\n  const [salesPieChartData, setsalesPieChartData] = useState([]);\r\n  const [puchasePieChartData, setpuchasePieChartData] = useState([]);\r\n  const [profitePieChartData, setprofitePieChartData] = useState([]);\r\n\r\n  const [filterTypes, setFilterTypes] = useState([\r\n    \"name\",\r\n    \"voucherType\",\r\n    \"state\",\r\n    \"salesman\",\r\n  ]);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownTwoOpen, setDropdownTwoOpen] = useState(false);\r\n  const [dropdownThreeOpen, setDropdownThreeOpen] = useState(false);\r\n  const [dropdownFourOpen, setDropdownFourOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  const toggleTwo = () => setDropdownTwoOpen((prevState) => !prevState);\r\n  const toggleThree = () => setDropdownThreeOpen((prevState) => !prevState);\r\n  const toggleFour = () => setDropdownFourOpen((prevState) => !prevState);\r\n\r\n  const changeValue = (e) => {\r\n    setFilter(e.currentTarget.textContent);\r\n  };\r\n\r\n  const changeValueTwo = (e) => {\r\n    setFilterTwo(e.currentTarget.textContent);\r\n  };\r\n\r\n  const changeValueThree = (e) => {\r\n    setFilterThree(e.currentTarget.textContent);\r\n  };\r\n  const changeValueFour = (e) => {\r\n    setFilterFour(e.currentTarget.textContent);\r\n  };\r\n\r\n  const processPieChartData = (label, data, header = \"graph\") => {\r\n    let pieData = {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          label: \"Net Profit analysis\",\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n            \"rgba(54, 162, 235, 0.6)\",\r\n            \"rgba(255, 206, 86, 0.6)\",\r\n            \"rgba(75, 192, 192, 0.6)\",\r\n            \"rgba(153, 102, 255, 0.6)\",\r\n            \"rgba(255, 159, 64, 0.6)\",\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n          ],\r\n          hoverBackgroundColor: [\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n            \"rgba(54, 162, 235, 0.6)\",\r\n            \"rgba(255, 206, 86, 0.6)\",\r\n            \"rgba(75, 192, 192, 0.6)\",\r\n            \"rgba(153, 102, 255, 0.6)\",\r\n            \"rgba(255, 159, 64, 0.6)\",\r\n            \"rgba(255, 99, 132, 0.6)\",\r\n          ],\r\n          borderWidth: 2,\r\n          data: data,\r\n        },\r\n      ],\r\n    };\r\n    return pieData;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.salesData) {\r\n      const _salesData = processPieChartData(\r\n        Object.keys(props.salesData),\r\n        Object.values(props.salesData),\r\n        \"Sales Data\"\r\n      );\r\n      setsalesPieChartData(_salesData);\r\n    }\r\n    if (props.puchase) {\r\n      const _puchase = processPieChartData(\r\n        Object.keys(props.puchase),\r\n        Object.values(props.puchase),\r\n        \"Puchase Data\"\r\n      );\r\n      setpuchasePieChartData(_puchase);\r\n    }\r\n    const label = ['sales', 'purchase'];\r\n    const data = [props.salesData.Total, props.puchase.Total];\r\n    const _profiteChartData = processPieChartData(label, data);\r\n    setprofitePieChartData(_profiteChartData);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filter] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filter] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filter);\r\n      setbarGraphOneData(barData);\r\n    }\r\n  }, [filter]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterTwo] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterTwo] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      debugger;\r\n      let barData = processPieChartData(label, data, filterTwo);\r\n      setbarGraphTwoData(barData);\r\n    }\r\n  }, [filterTwo]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterThree] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterThree] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filterThree);\r\n      setbarGraphThreeData(barData);\r\n    }\r\n  }, [filterThree]);\r\n\r\n  useEffect(() => {\r\n    let label = [],\r\n      data = [];\r\n    if (props && props.excelData) {\r\n      for (let index = 0; index < props.excelData.length; index++) {\r\n        const element = props.excelData[index];\r\n        const indexOf = label.indexOf(element[filterFour] || \"Other\");\r\n        if (indexOf !== -1) {\r\n          data[indexOf] += element.total;\r\n        } else {\r\n          label.push(element[filterFour] || \"Other\");\r\n          data.push(element.total);\r\n        }\r\n      }\r\n      let barData = processPieChartData(label, data, filterFour);\r\n      setbarGraphFourData(barData);\r\n    }\r\n  }, [filterFour]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n              <DropdownToggle caret>\r\n                {filter || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValue}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphOneData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownTwoOpen} toggle={toggleTwo}>\r\n              <DropdownToggle caret>\r\n                {filterTwo || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueTwo}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphTwoData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownThreeOpen} toggle={toggleThree}>\r\n              <DropdownToggle caret>\r\n                {filterThree || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueThree}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphThreeData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Dropdown isOpen={dropdownFourOpen} toggle={toggleFour}>\r\n              <DropdownToggle caret>\r\n                {filterFour || \"Select Category\"}\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                {filterTypes &&\r\n                  filterTypes.map((filter) => {\r\n                    return (\r\n                      <DropdownItem onClick={changeValueFour}>\r\n                        {filter}\r\n                      </DropdownItem>\r\n                    );\r\n                  })}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n            <Card>\r\n              <CardBody>\r\n                <Pie\r\n                  data={barGraphFourData}\r\n                  options={{ maintainAspectRatio: false }}\r\n                  height={200}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <br/>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={salesPieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={puchasePieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <Card>\r\n            <CardBody>\r\n              <Pie\r\n                data={profitePieChartData}\r\n                options={{ maintainAspectRatio: false }}\r\n                height={200}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}